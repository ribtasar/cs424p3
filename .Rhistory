selections3<-c("Residential","Commercia","Industrial")
runApp('C:/Users/ribta/OneDrive/Desktop/UIC/Courses/Spring 2021/CS424/Project3/cs424p3')
runApp('C:/Users/ribta/OneDrive/Desktop/UIC/Courses/Spring 2021/CS424/Project3/cs424p3')
runApp('C:/Users/ribta/OneDrive/Desktop/UIC/Courses/Spring 2021/CS424/Project3/cs424p3')
runApp('C:/Users/ribta/OneDrive/Desktop/UIC/Courses/Spring 2021/CS424/Project3/cs424p3')
runApp('C:/Users/ribta/OneDrive/Desktop/UIC/Courses/Spring 2021/CS424/Project3/cs424p3')
runApp('C:/Users/ribta/OneDrive/Desktop/UIC/Courses/Spring 2021/CS424/Project3/cs424p3')
runApp('C:/Users/ribta/OneDrive/Desktop/UIC/Courses/Spring 2021/CS424/Project3/cs424p3')
runApp('C:/Users/ribta/OneDrive/Desktop/UIC/Courses/Spring 2021/CS424/Project3/cs424p3')
runApp('C:/Users/ribta/OneDrive/Desktop/UIC/Courses/Spring 2021/CS424/Project3/cs424p3')
runApp('C:/Users/ribta/OneDrive/Desktop/UIC/Courses/Spring 2021/CS424/Project3/cs424p3')
runApp('C:/Users/ribta/OneDrive/Desktop/UIC/Courses/Spring 2021/CS424/Project3/cs424p3')
runApp('C:/Users/ribta/OneDrive/Desktop/UIC/Courses/Spring 2021/CS424/Project3/cs424p3')
runApp('C:/Users/ribta/OneDrive/Desktop/UIC/Courses/Spring 2021/CS424/Project3/cs424p3')
runApp('C:/Users/ribta/OneDrive/Desktop/UIC/Courses/Spring 2021/CS424/Project3/cs424p3')
runApp('C:/Users/ribta/OneDrive/Desktop/UIC/Courses/Spring 2021/CS424/Project3/cs424p3')
runApp('C:/Users/ribta/OneDrive/Desktop/UIC/Courses/Spring 2021/CS424/Project3/cs424p3')
runApp('C:/Users/ribta/OneDrive/Desktop/UIC/Courses/Spring 2021/CS424/Project3/cs424p3')
runApp('C:/Users/ribta/OneDrive/Desktop/UIC/Courses/Spring 2021/CS424/Project3/cs424p3')
runApp('C:/Users/ribta/OneDrive/Desktop/UIC/Courses/Spring 2021/CS424/Project3/cs424p3')
runApp('C:/Users/ribta/OneDrive/Desktop/UIC/Courses/Spring 2021/CS424/Project3/cs424p3')
runApp('C:/Users/ribta/OneDrive/Desktop/UIC/Courses/Spring 2021/CS424/Project3/cs424p3')
runApp('C:/Users/ribta/OneDrive/Desktop/UIC/Courses/Spring 2021/CS424/Project3/cs424p3')
nws<-subset(d1, d1$COMMUNITY.AREA.NAME=="Near West Side")
chicagoblks <- subset(blks, blks$GEOID10 %in% d1$CENSUS.BLOCK)
# Project 3 CS 424 Spring 2020 UIC - Rabia Ibtasar
#To deploy
#library(rsconnect)
#rsconnect::deployApp('path/to/your/app')
#libraries to include
library(usmap)
library(shiny)
library(shinydashboard)
library(ggplot2)
library(RColorBrewer)
library(dplyr)
library(DT)
library(gridExtra)
library(leaflet)
library(sf)
library(leaflet.extras)
library(tidyverse)
library(readxl)
library(scales)
library(rgdal)
library(usdata)
library(sp)
library(tigris)
library(mapview)
#set the correct wd
#setwd('C:/Users/ribta/OneDrive/Desktop/UIC/Courses/Spring 2021/CS424/project3/cs424p3')
set.seed(122)
#read the excel data into d
d1<-read.csv('Energy_Usage_2010.csv')
d1[18:19]<-NULL
d1[31:61]<-NULL
#data cleanup to start analysis
#change datatypes into correct types for data analysis
d1$CENSUS.BLOCK<-as.character(d1$CENSUS.BLOCK)
#take care of all the missing values in the data
#change the NAs in the columns to 0s
d1[2][is.na(d1[2])] <- ""
d1[, 5:40][is.na(d1[, 5:40])] <- 0
#colSums(is.na(d1)) :to check the sume of NAs
#load shapefiles for use
blks <- blocks(state = "IL", county = "Cook County")
#subset to get only the blocks for Chicago that are in our data set
chicagoblks <- subset(blks, blks$GEOID10 %in% d1$CENSUS.BLOCK)
#subset data for Near West Side
nws<-subset(d1, d1$COMMUNITY.AREA.NAME=="Near West Side")
#Merge spatial data with NWS data frame
#merged_d1<-geo_join (chicagoblks,nws,'GEOID10','CENSUS.BLOCK',how="inner")
merged_d1<-geo_join (chicagoblks,nws,'GEOID10','CENSUS.BLOCK',how="inner")
#lists to use for UI inputs
selections1<- c("Electricity","Gas","Building Age","Building Type","Building Height",
"Total Population")
selections2<-c("Total","January","February","March","April","May","June","July",
"August","September","October","November","December" )
selections3<-c("All","Residential","Commercial","Industrial")
#===========
#start of UI
#===========
#create the sidebar menu for dashboard
sidebar <-dashboardSidebar (disable = FALSE, collapsed = FALSE,
sidebarMenu(
menuItem("Near West Side", tabName = "westSide", icon =NULL),
menuItem("Community Comparison", tabName = "comparison", icon =icon("dashboard")),
menuItem("City of Chicago", tabName = "chicago", icon =icon("globe")),
menuItem("About", tabName = "about", icon = NULL)
)
)
body<-dashboardBody(
tabItems(
tabItem(tabName = "westSide",
#first row
fluidRow(
column(width=3, offset=1,
selectInput("input1", "Select option:", selections1, selected=1)
),
column(width = 3,
selectInput("input2", "Select the Month:", selections2, selected=1)
),
column(width = 3,
selectInput("input3", "Select Building Type:", selections3, selected=1)
),
),
#second row
fluidRow(
column(width=10, offset=1,
tabBox(title = "Near West Side Data", id="tabset1", selected = "Map", width = NULL,
tabPanel("Map", leafletOutput("map1", height = "65vh")),
tabPanel("Table")
)#end of tabbox
)
)
),
#second Tab Item is for state comparison
tabItem(tabName = "comparison",
fluidRow(class = "myRow1",
column(width=6, offset=0,
box(
title = "Map1", status = "primary", width = 12,
collapsible = TRUE, collapsed = TRUE,
selectInput("input4", "Select option:", selections1, selected=1),
selectInput("input5", "Select the Month:", selections2, selected=1),
selectInput("input6", "Select Building Type:", selections3, selected=1)
)
),
column(width=6, offset=0,
box(
title = "Map 2", status = "primary", width = 12,
collapsible = TRUE, collapsed = TRUE,
selectInput("input6", "Select option:", selections1, selected=1),
selectInput("input7", "Select the Month:", selections2, selected=1),
selectInput("input8", "Select Building Type:", selections3, selected=1)
)
),
),
fluidRow(),
fluidRow(class = "myRow2",
column(6,
fluidRow(
tabBox(title = "Map 1", id="tabset2", selected = "Map", width = NULL,
collapsible=TRUE,
tabPanel("Map", leafletOutput("map1", height = "65vh")),
tabPanel("Table")
)#end of tabbox
),
),
column(6,
fluidRow(
tabBox(title = "Map 2", id="tabset3", selected = "Map", width = NULL,
collapsible=TRUE,
tabPanel("Map", leafletOutput("map1", height = "65vh")),
tabPanel("Table")
)#end of tabbox
),
),
)
), #end of second tab Item
#
#ABOUT TAB
#
tabItem(tabName = "about",
h2("About"),
mainPanel(
h4("Thanks for visiting the App."),
h4("Data Source:The original data is available from
https://www.kaggle.com/chicago/chicago-energy-usage-2010
and also available at
https://data.cityofchicago.org/Environment-Sustainable-Development/Energy-Usage-2010/8yq3-m6wp"),
h5("App developer: Rabia Ibtasar"),
h5("What is this application for?"),
h5("
This interactive application has been designed to allow visitors to
")
)
)
)
)
# Create the shiny dashboard
ui <- dashboardPage(skin = "purple",
dashboardHeader(title = "CS 424 Project 2 Comparing Energy sources in the US"), sidebar, body
)
#========================
#START OF SERVER FUNCTION
#========================
server <- function(input, output,session) {
m <- mapview(merged_d1, zcol = "TOTAL.KWH")
output$map1 <- renderLeaflet({
m@map
})
}
shinyApp(ui = ui, server = server)
runApp('C:/Users/ribta/OneDrive/Desktop/UIC/Courses/Spring 2021/CS424/Project3/cs424p3')
runApp('C:/Users/ribta/OneDrive/Desktop/UIC/Courses/Spring 2021/CS424/Project3/cs424p3')
runApp('C:/Users/ribta/OneDrive/Desktop/UIC/Courses/Spring 2021/CS424/Project3/cs424p3')
runApp('C:/Users/ribta/OneDrive/Desktop/UIC/Courses/Spring 2021/CS424/Project3/cs424p3')
# Project 3 CS 424 Spring 2020 UIC - Rabia Ibtasar
#To deploy
#library(rsconnect)
#rsconnect::deployApp('path/to/your/app')
#libraries to include
library(usmap)
library(shiny)
library(shinydashboard)
library(ggplot2)
library(RColorBrewer)
library(dplyr)
library(DT)
library(gridExtra)
library(leaflet)
library(sf)
library(leaflet.extras)
library(tidyverse)
library(readxl)
library(scales)
library(rgdal)
library(usdata)
library(sp)
library(tigris)
library(mapview)
#set the correct wd
#setwd('C:/Users/ribta/OneDrive/Desktop/UIC/Courses/Spring 2021/CS424/project3/cs424p3')
set.seed(122)
#read the excel data into d
d1<-read.csv('Energy_Usage_2010.csv')
d1[18:19]<-NULL
d1[31:61]<-NULL
#data cleanup to start analysis
#change datatypes into correct types for data analysis
d1$CENSUS.BLOCK<-as.character(d1$CENSUS.BLOCK)
#take care of all the missing values in the data
#change the NAs in the columns to 0s
d1[2][is.na(d1[2])] <- ""
d1[, 5:40][is.na(d1[, 5:40])] <- 0
#colSums(is.na(d1)) :to check the sume of NAs
#load shapefiles for use
blks <- blocks(state = "IL", county = "Cook County")
#subset to get only the blocks for Chicago that are in our data set
chicagoblks <- subset(blks, blks$GEOID10 %in% d1$CENSUS.BLOCK)
#subset data for Near West Side
nws<-subset(d1, d1$COMMUNITY.AREA.NAME=="Near West Side")
#Merge spatial data with NWS data frame
#merged_d1<-geo_join (chicagoblks,nws,'GEOID10','CENSUS.BLOCK',how="inner")
merged_d1<-geo_join (chicagoblks,nws,'GEOID10','CENSUS.BLOCK',how="inner")
#lists to use for UI inputs
selections1<- c("Electricity","Gas","Building Age","Building Type","Building Height",
"Total Population")
selections2<-c("Total","January","February","March","April","May","June","July",
"August","September","October","November","December" )
selections3<-c("All","Residential","Commercial","Industrial")
#===========
#start of UI
#===========
#create the sidebar menu for dashboard
sidebar <-dashboardSidebar (disable = FALSE, collapsed = FALSE,
sidebarMenu(
menuItem("Near West Side", tabName = "westSide", icon =NULL),
menuItem("Community Comparison", tabName = "comparison", icon =icon("dashboard")),
menuItem("City of Chicago", tabName = "chicago", icon =icon("globe")),
menuItem("About", tabName = "about", icon = NULL)
)
)
body<-dashboardBody(
tabItems(
tabItem(tabName = "westSide",
#first row
fluidRow(
column(width=3, offset=1,
selectInput("input1", "Select option:", selections1, selected=1)
),
column(width = 3,
selectInput("input2", "Select the Month:", selections2, selected=1)
),
column(width = 3,
selectInput("input3", "Select Building Type:", selections3, selected=1)
),
),
#second row
fluidRow(
column(width=10, offset=1,
tabBox(title = "Near West Side Data", id="tabset1", selected = "Map", width = NULL,
tabPanel("Map"),
tabPanel("Table")
)#end of tabbox
)
)
),
#second Tab Item is for state comparison
tabItem(tabName = "comparison",
fluidRow(class = "myRow1",
column(width=6, offset=0,
box(
title = "Map1", status = "primary", width = 12,
collapsible = TRUE, collapsed = TRUE,
selectInput("input4", "Select option:", selections1, selected=1),
selectInput("input5", "Select the Month:", selections2, selected=1),
selectInput("input6", "Select Building Type:", selections3, selected=1)
)
),
column(width=6, offset=0,
box(
title = "Map 2", status = "primary", width = 12,
collapsible = TRUE, collapsed = TRUE,
selectInput("input6", "Select option:", selections1, selected=1),
selectInput("input7", "Select the Month:", selections2, selected=1),
selectInput("input8", "Select Building Type:", selections3, selected=1)
)
),
),
fluidRow(),
fluidRow(class = "myRow2",
column(6,
fluidRow(
tabBox(title = "Map 1", id="tabset2", selected = "Map", width = NULL,
collapsible=TRUE,
tabPanel("Map"),
tabPanel("Table")
)#end of tabbox
),
),
column(6,
fluidRow(
tabBox(title = "Map 2", id="tabset3", selected = "Map", width = NULL,
collapsible=TRUE,
tabPanel("Map"),
tabPanel("Table")
)#end of tabbox
),
),
)
), #end of second tab Item
#
#ABOUT TAB
#
tabItem(tabName = "about",
h2("About"),
mainPanel(
h4("Thanks for visiting the App."),
h4("Data Source:The original data is available from
https://www.kaggle.com/chicago/chicago-energy-usage-2010
and also available at
https://data.cityofchicago.org/Environment-Sustainable-Development/Energy-Usage-2010/8yq3-m6wp"),
h5("App developer: Rabia Ibtasar"),
h5("What is this application for?"),
h5("
This interactive application has been designed to allow visitors to
")
)
)
)
)
# Create the shiny dashboard
ui <- dashboardPage(skin = "purple",
dashboardHeader(title = "CS 424 Project 2 Comparing Energy sources in the US"), sidebar, body
)
#========================
#START OF SERVER FUNCTION
#========================
server <- function(input, output,session) {
m <- mapview(merged_d1, zcol = "TOTAL.KWH")
# output$map1 <- renderLeaflet({
#  # m@map
# })
# output$map2 <- renderLeaflet({
#  # m@map
# })
# output$map3 <- renderLeaflet({
# #  m@map
# })
}
shinyApp(ui = ui, server = server)
View(d1)
mapview(merged_d1, zcol = "TOTAL.KWH")
runApp('C:/Users/ribta/OneDrive/Desktop/UIC/Courses/Spring 2021/CS424/Project3/cs424p3')
#read the excel data into d
d1<-read.csv('Energy_Usage_2010.csv')
d1[18:19]<-NULL
d1[31:61]<-NULL
View(d1)
d1$CENSUS.BLOCK<-as.character(d1$CENSUS.BLOCK)
#take care of all the missing values in the data
#change the NAs in the columns to 0s
d1[2][is.na(d1[2])] <- ""
d1[, 5:40][is.na(d1[, 5:40])] <- 0
blks <- blocks(state = "IL", county = "Cook County")
chicagoblks <- subset(blks, blks$GEOID10 %in% d1$CENSUS.BLOCK)
nws<-subset(d1, d1$COMMUNITY.AREA.NAME=="Near West Side")
merged_d1<-geo_join (chicagoblks,nws,'GEOID10','CENSUS.BLOCK',how="inner")
#lists to use for UI inputs
selections1<- c("Electricity","Gas","Building Age","Building Type","Building Height",
"Total Population")
selections2<-c("Total","January","February","March","April","May","June","July",
"August","September","October","November","December" )
selections3<-c("All","Residential","Commercial","Industrial")
sidebar <-dashboardSidebar (disable = FALSE, collapsed = FALSE,
sidebarMenu(
menuItem("Near West Side", tabName = "westSide", icon =NULL),
menuItem("Community Comparison", tabName = "comparison", icon =icon("dashboard")),
menuItem("City of Chicago", tabName = "chicago", icon =icon("globe")),
menuItem("About", tabName = "about", icon = NULL)
)
)
body<-dashboardBody(
tabItems(
tabItem(tabName = "westSide",
#first row
fluidRow(
column(width=3, offset=1,
selectInput("input1", "Select option:", selections1, selected=1)
),
column(width = 3,
selectInput("input2", "Select the Month:", selections2, selected=1)
),
column(width = 3,
selectInput("input3", "Select Building Type:", selections3, selected=1)
),
),
#second row
fluidRow(
column(width=10, offset=1,
tabBox(title = "Near West Side Data", id="tabset1", selected = "Map", width = NULL,
tabPanel("Map"),
tabPanel("Table")
)#end of tabbox
)
)
),
#second Tab Item is for state comparison
tabItem(tabName = "comparison",
fluidRow(class = "myRow1",
column(width=6, offset=0,
box(
title = "Map1", status = "primary", width = 12,
collapsible = TRUE, collapsed = TRUE,
selectInput("input4", "Select option:", selections1, selected=1),
selectInput("input5", "Select the Month:", selections2, selected=1),
selectInput("input6", "Select Building Type:", selections3, selected=1)
)
),
column(width=6, offset=0,
box(
title = "Map 2", status = "primary", width = 12,
collapsible = TRUE, collapsed = TRUE,
selectInput("input6", "Select option:", selections1, selected=1),
selectInput("input7", "Select the Month:", selections2, selected=1),
selectInput("input8", "Select Building Type:", selections3, selected=1)
)
),
),
fluidRow(),
fluidRow(class = "myRow2",
column(6,
fluidRow(
tabBox(title = "Map 1", id="tabset2", selected = "Map", width = NULL,
collapsible=TRUE,
tabPanel("Map"),
tabPanel("Table")
)#end of tabbox
),
),
column(6,
fluidRow(
tabBox(title = "Map 2", id="tabset3", selected = "Map", width = NULL,
collapsible=TRUE,
tabPanel("Map"),
tabPanel("Table")
)#end of tabbox
),
),
)
), #end of second tab Item
#
#ABOUT TAB
#
tabItem(tabName = "about",
h2("About"),
mainPanel(
h4("Thanks for visiting the App."),
h4("Data Source:The original data is available from
https://www.kaggle.com/chicago/chicago-energy-usage-2010
and also available at
https://data.cityofchicago.org/Environment-Sustainable-Development/Energy-Usage-2010/8yq3-m6wp"),
h5("App developer: Rabia Ibtasar"),
h5("What is this application for?"),
h5("
This interactive application has been designed to allow visitors to
")
)
)
)
)
runApp('C:/Users/ribta/OneDrive/Desktop/UIC/Courses/Spring 2021/CS424/Project3/cs424p3')
runApp('C:/Users/ribta/OneDrive/Desktop/UIC/Courses/Spring 2021/CS424/Project3/cs424p3')
runApp('C:/Users/ribta/OneDrive/Desktop/UIC/Courses/Spring 2021/CS424/Project3/cs424p3')
runApp('C:/Users/ribta/OneDrive/Desktop/UIC/Courses/Spring 2021/CS424/Project3/cs424p3')
View(chicagoblks)
View(merged_d1)
View(d1)
unique(d1$COMMUNITY.AREA.NAME)
selections4<-unique(d1$COMMUNITY.AREA.NAME)
selections4[4]
runApp('C:/Users/ribta/OneDrive/Desktop/UIC/Courses/Spring 2021/CS424/Project3/cs424p3')
runApp('C:/Users/ribta/OneDrive/Desktop/UIC/Courses/Spring 2021/CS424/Project3/cs424p3')
runApp('C:/Users/ribta/OneDrive/Desktop/UIC/Courses/Spring 2021/CS424/Project3/cs424p3')
runApp('C:/Users/ribta/OneDrive/Desktop/UIC/Courses/Spring 2021/CS424/Project3/cs424p3')
runApp('C:/Users/ribta/OneDrive/Desktop/UIC/Courses/Spring 2021/CS424/Project3/cs424p3')
runApp('C:/Users/ribta/OneDrive/Desktop/UIC/Courses/Spring 2021/CS424/Project3/cs424p3')
remotes::install_github("r-spatial/mapview")
remotes::install_github("r-spatial/mapview")
remotes::install_github("r-spatial/mapview")
